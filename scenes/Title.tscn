[gd_scene load_steps=13 format=2]

[ext_resource path="res://scenes/Title.gd" type="Script" id=1]
[ext_resource path="res://sprites/car.png" type="Texture" id=2]
[ext_resource path="res://sprites/logo.png" type="Texture" id=3]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec4 mask_color : hint_color = vec4(1.0, 0.0, 1.0, 1.0);
uniform vec4 replacement_color : hint_color = vec4(1.0, 0.0, 0.0, 1.0);

void fragment()
{
    // Obtener el color del píxel actual
    vec4 color = texture(TEXTURE, UV);

    // Comprobar si el color coincide con el color de máscara
    if (color.rgb == mask_color.rgb)
    {
        // Reemplazar el color de máscara por el color especificado
        color.rgb = replacement_color.rgb;
    }

    // Devolver el color modificado
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/mask_color = Color( 1, 0, 1, 1 )
shader_param/replacement_color = Color( 0, 1, 0, 1 )

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 mask_color : hint_color = vec4(1.0, 0.0, 1.0, 1.0);
uniform vec4 replacement_color : hint_color = vec4(1.0, 0.0, 0.0, 1.0);

void fragment()
{
    // Obtener el color del píxel actual
    vec4 color = texture(TEXTURE, UV);

    // Comprobar si el color coincide con el color de máscara
    if (color.rgb == mask_color.rgb)
    {
        // Reemplazar el color de máscara por el color especificado
        color.rgb = replacement_color.rgb;
    }

    // Devolver el color modificado
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/mask_color = Color( 1, 0, 1, 1 )
shader_param/replacement_color = Color( 1, 0, 0, 1 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 mask_color : hint_color = vec4(1.0, 0.0, 1.0, 1.0);
uniform vec4 replacement_color : hint_color = vec4(1.0, 0.0, 0.0, 1.0);

void fragment()
{
    // Obtener el color del pÃ­xel actual
    vec4 color = texture(TEXTURE, UV);

    // Comprobar si el color coincide con el color de mÃ¡scara
    if (color.rgb == mask_color.rgb)
    {
        // Reemplazar el color de mÃ¡scara por el color especificado
        color.rgb = replacement_color.rgb;
    }

    // Devolver el color modificado
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/mask_color = Color( 1, 0, 1, 1 )
shader_param/replacement_color = Color( 0, 0, 1, 1 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform vec4 mask_color : hint_color = vec4(1.0, 0.0, 1.0, 1.0);
uniform vec4 replacement_color : hint_color = vec4(1.0, 0.0, 0.0, 1.0);

void fragment()
{
    // Obtener el color del pÃ­xel actual
    vec4 color = texture(TEXTURE, UV);

    // Comprobar si el color coincide con el color de mÃ¡scara
    if (color.rgb == mask_color.rgb)
    {
        // Reemplazar el color de mÃ¡scara por el color especificado
        color.rgb = replacement_color.rgb;
    }

    // Devolver el color modificado
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/mask_color = Color( 1, 0, 1, 1 )
shader_param/replacement_color = Color( 1, 1, 0, 1 )

[sub_resource type="Animation" id=9]
resource_name = "New Anim"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("Car:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -136.035, 64.102 ), Vector2( 1300, 64.102 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Car2:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.43, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -192.035, 302.102 ), Vector2( 1300, 302.102 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Car3:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.9, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -85.0345, 204.102 ), Vector2( 1300, 204.102 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Car4:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 1.2, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -139.035, 438.102 ), Vector2( 1300, 438.102 ) ]
}

[node name="Title" type="Node2D"]
script = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
margin_left = -272.0
margin_top = -109.0
margin_right = 1256.0
margin_bottom = 755.0
color = Color( 0.0470588, 0, 0.0941176, 1 )

[node name="Car2" type="Sprite" parent="."]
material = SubResource( 4 )
position = Vector2( -151.395, 302.102 )
rotation = -1.34914
scale = Vector2( 3, 3 )
texture = ExtResource( 2 )

[node name="Car" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( -136.035, 64.102 )
rotation = -1.34914
scale = Vector2( 3, 3 )
texture = ExtResource( 2 )

[node name="Car3" type="Sprite" parent="."]
material = SubResource( 6 )
position = Vector2( -85.0345, 204.102 )
rotation = -1.34914
scale = Vector2( 3, 3 )
texture = ExtResource( 2 )

[node name="Car4" type="Sprite" parent="."]
material = SubResource( 8 )
position = Vector2( 20.8582, 438.102 )
rotation = -1.34914
scale = Vector2( 3, 3 )
texture = ExtResource( 2 )

[node name="Logo" type="Sprite" parent="."]
position = Vector2( 525, 241 )
texture = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
playback_speed = 2.0
"anims/New Anim" = SubResource( 9 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
